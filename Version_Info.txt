   Key Legend:
                -- = current version
                -wor: = working on this ver
                 <-x_x-> = bug
                 |x_x| = bug fixed
                 <-o_o-> = design issue
                 |o_o| = design issue fixed


                     ~Updating to repo~
               | --------------------------- |
               | v# : Short Version Title    |
               | Description: v# description |
               | --------------------------- |

----------------------------    ----------------------------   ------------------------- ------------------------------
v0 Continuation: This is a continuation of respo Ai_Development_0, will be studying A.i a bit more in-depth
                        As of now just created the respo, with the necassary files to start the program. made a
                        version_info.txt, readme, and chap1. will be reading pythonmachinelearning -
                        The Python Machine Learning Ecosystem Chap1 at the moment.

v1 Respo Fixed: Fixed couple of issues with v0, now the README.md can be seen & Version_Info.txt on the 1st page
                once a user clicks on the respo. Also modified the venv/changed location of the files to second folder.
                Instead of have to click on 3 folders to see a program.

v2 PyCharm & Jupyter Notebook: Just got started on Jupyter for learning a bit more about pandas/aquiring data
                                from iris datasets, will be making a new folder to hold jupyter programs to seperate it
                                from pycharm files to help organize a bit. As of now I'm going deep in A.I/machine development
                                this is going to be a blast!

v3 DataFrame Pandas: testing some notes for using pandas and df for gathering data @ file dataset_for_jupyter.ipnb

v4 Jupyter Theme Changed & Notes added: Link to help with changing Jupyter theme to 'dark mode'
                                            link: https://www.youtube.com/watch?v=gjxrDf6Pp6M

                                            github link for shortcut for adding new line on jupyter:
                                            https://github.com/jupyter/notebook/issues/3918

                                            df.iloc[:3,:2]
                                            .iloc notation and the Python list slicing syntax,
                                             we were able to select a slice of this DataFrame.

                                             Added a new file called Demo of Jupyter, just a mini file testing Jupyter
                                             Shift-Enter to auto start the program,
                                             esc-b to make a new line

v5 Testing .iloc & loc iterators: -using list iterator to select just the width feature columns:
                                           df.loc[:3, [x for x in df.columns if 'width' in x]]
                                           'reate a list that is a subset of all columns. df.columns returns a list
                                           of all columns, and our iteration uses a conditional statement to
                                           select only those with width in the title'

                                           df.iloc[:4,:2] to select sepal length & sepal width

                                           df.iloc[:1,:5] selecting -> 	sepal length (cm)	sepal width (cm)
                                           petal length (cm)	petal width (cm) & 	species

                                           file changes are @ dataset_for_jupyter.ipynb
----------------------------    ----------------------------   ------------------------- ------------------------------
v6 Selecting Specific Data From The Subset :  -> df['species'].unique() -> aquires the array and dtype which is int64

                                            -> df[df['species']==2] -> aquires the species sepal info and species #

                                           -> df[(df['species']==2)&(df['petal width (cm)']>2.2)] ->
                                            gets the species info that is greater than 2.2

                                            -> df.describe() just describes the information / give stats

                                            -> df.describe(percentiles=[.1,.2,.3,.4,.5,.6,.7,.8,.9])
                                                Gives the information that is more specific if the user wishes to get more
                                                precise measurments of the data on percentiles goes from 10% - 90% aka
                                                max

                                            -> df.corr() checks the correlation between the data


                                       v6.5 README.md Edit: Updated the README.md to include commas helps with the
                                                              flow statement of the sentence.


v7 Visualization of the Data: Made a new file called visualize.ipynb, updated py_chap1_source.py
                                  to accomadate the the info for graphing & made a new folder
                                  to hold the ipynb files called ipnb_files
                                  Installed matplotlib & jupyter onto pycharm as well.


v8 Graph Info:    For visualize.ipynb the following information is:
                - Graph info & explaination
                # creates the subplot -> 8inch width by 4inch height
                fig, ax = plt.subplots(figsize=(10,5))

                #this plots the histogram 4 petal width from iris df
                #by naming it .hist then pass the data, auto set the color to green
                ax.hist(df['petal width (cm)'], color='green');

                # set the y label position / font size
                ax.set_ylabel('Count', fontsize=14)

                # set the x label position / font size
                ax.set_xlabel('Width', fontsize=14)

                # set the graph title , y position & font size
                plt.title('Iris Petal Width', fontsize=14, y=1.01)


v9 Multi Graphs: on visualize.ipynb line [20] 4graphs are and shown to the user with the data for
                    Iris Petal Width , Iris Petal Length , Iris Sepal Width & Iris Sepal length. With
                    color codes for their graph color distinguishing from each other.
---------------------------    ----------------------------   ------------------------- ------------------------------
v10 ScatterPlot & Line Graph: 2 new graphs has been created 1 with Scatter Plot @ line [5] that puts the data on
                                a scatter format, while the line graph @ line [6] just displays the information as a
                                line for the petal information.

11 Bar Graph : creation for Bar graph located @ line [7] for visualize.ipynb just a quick
                    example on creating this graph with comments explaining some of its
                    features ^_*

--v12 Installed Seaborn: installed seaborn for more in-depthstatistical visualizations
               seaborn link/doc : http://seaborn.pydata.org/index.html
                @ line[17] basic intro to seaborn -> by importing it and showing the species information
                on multi graphs with either line, scatter graphs showing sepal & petal data.

                @ line [18] shows Violin Plots which are graph format that shows both sepal & petal information

